within PowerGrab;

package Tests
  model TestFingerMultipleRevolute
    PowerGrab.Components.BoneJointComponent boneMDistal(r_IFingerBone = r_IboneMDistal, r_shape_IFingerBone = r_shape_IboneMDistal, diameterIFingerBone = diameterIboneMDistal, diameterOFingerBone = diameterOboneMDistal, r_OFingerBone = r_OboneMDistal, r_shape_OFingerBone = r_shape_OboneMDistal, phi_0_restrained = phi_0_boneMDistal, stateSelect = false) annotation(Placement(visible = true, transformation(origin = {5.256, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    PowerGrab.Components.BoneJointComponent boneFDistal(r_IFingerBone = r_IboneFDistal, r_shape_IFingerBone = r_shape_IboneFDistal, diameterIFingerBone = diameterIboneFDistal, diameterOFingerBone = diameterOboneFDistal, r_OFingerBone = r_OboneFDistal, r_shape_OFingerBone = r_shape_OboneFDistal, phi_0_restrained = phi_0_boneFDistal, stateSelect = false) annotation(Placement(visible = true, transformation(origin = {70, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_1P annotation(Placement(visible = true, transformation(origin = {120, -104}, extent = {{-16, -16}, {16, 16}}, rotation = -90), iconTransformation(origin = {120.205, 120.205}, extent = {{-10.205, -10.205}, {10.205, 10.205}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_a frame_1A annotation(Placement(visible = true, transformation(origin = {120, 104}, extent = {{-16, -16}, {16, 16}}, rotation = -90), iconTransformation(origin = {-119.709, 119.709}, extent = {{-10.291, -10.291}, {10.291, 10.291}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_a frame_2A annotation(Placement(visible = true, transformation(origin = {80, 104}, extent = {{-16, -16}, {16, 16}}, rotation = -90), iconTransformation(origin = {-120, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_a frame_3A annotation(Placement(visible = true, transformation(origin = {40, 104}, extent = {{-16, -16}, {16, 16}}, rotation = -90), iconTransformation(origin = {-119.764, 39.764}, extent = {{-10.236, -10.236}, {10.236, 10.236}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_a frame_4A annotation(Placement(visible = true, transformation(origin = {0, 104}, extent = {{-16, -16}, {16, 16}}, rotation = -90), iconTransformation(origin = {-120.006, -0.006}, extent = {{-10.006, -10.006}, {10.006, 10.006}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_a frame_5A annotation(Placement(visible = true, transformation(origin = {-40, 104}, extent = {{-16, -16}, {16, 16}}, rotation = -90), iconTransformation(origin = {-119.976, -39.976}, extent = {{-9.976000000000001, -9.976000000000001}, {9.976000000000001, 9.976000000000001}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_a frame_6A annotation(Placement(visible = true, transformation(origin = {-80, 104}, extent = {{-16, -16}, {16, 16}}, rotation = -90), iconTransformation(origin = {-119.725, -79.72499999999999}, extent = {{-9.725, -9.725}, {9.725, 9.725}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_a frame_7A annotation(Placement(visible = true, transformation(origin = {-120, 104}, extent = {{-16, -16}, {16, 16}}, rotation = -90), iconTransformation(origin = {-119.575, -119.575}, extent = {{-9.574999999999999, -9.574999999999999}, {9.574999999999999, 9.574999999999999}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_2P annotation(Placement(visible = true, transformation(origin = {80, -104}, extent = {{-16, -16}, {16, 16}}, rotation = -90), iconTransformation(origin = {120.223, 80}, extent = {{-9.776999999999999, -9.776999999999999}, {9.776999999999999, 9.776999999999999}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_3P annotation(Placement(visible = true, transformation(origin = {40, -104}, extent = {{-16, -16}, {16, 16}}, rotation = -90), iconTransformation(origin = {119.819, 39.819}, extent = {{-10.181, -10.181}, {10.181, 10.181}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_4P annotation(Placement(visible = true, transformation(origin = {0, -104}, extent = {{-16, -16}, {16, 16}}, rotation = -90), iconTransformation(origin = {119.401, -0.599}, extent = {{-10.599, -10.599}, {10.599, 10.599}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_5P annotation(Placement(visible = true, transformation(origin = {-40, -104}, extent = {{-16, -16}, {16, 16}}, rotation = -90), iconTransformation(origin = {119.869, -40.131}, extent = {{-9.869, -9.869}, {9.869, 9.869}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_6P annotation(Placement(visible = true, transformation(origin = {-80, -104}, extent = {{-16, -16}, {16, 16}}, rotation = -90), iconTransformation(origin = {120, -80.37}, extent = {{-10.37, -10.37}, {10.37, 10.37}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_7P annotation(Placement(visible = true, transformation(origin = {-120, -104}, extent = {{-16, -16}, {16, 16}}, rotation = -90), iconTransformation(origin = {119.582, -120}, extent = {{-10.418, -10.418}, {10.418, 10.418}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.FixedTranslation anteriorBase annotation(Placement(visible = true, transformation(origin = {-127.882, 41.75}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.FixedTranslation posteriorBase annotation(Placement(visible = true, transformation(origin = {-127.948, -41.75}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Blocks.Interfaces.RealInput thetaCDistal annotation(Placement(visible = true, transformation(origin = {-63.718, 26.436}, extent = {{10.401, -10.401}, {-10.401, 10.401}}, rotation = 0), iconTransformation(origin = {-66.84999999999999, 125.992}, extent = {{-20, -20}, {20, 20}}, rotation = -90)));
    Modelica.Blocks.Interfaces.RealInput thetaMDistal annotation(Placement(visible = true, transformation(origin = {25.215, 26.054}, extent = {{10.401, -10.401}, {-10.401, 10.401}}, rotation = 0), iconTransformation(origin = {-10, 126.471}, extent = {{-20, -20}, {20, 20}}, rotation = -90)));
    Modelica.Blocks.Interfaces.RealInput thetaFDistal annotation(Placement(visible = true, transformation(origin = {99.599, 26.473}, extent = {{10.401, -10.401}, {-10.401, 10.401}}, rotation = 0), iconTransformation(origin = {50, 126.321}, extent = {{-20, -20}, {20, 20}}, rotation = -90)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_a frame_a annotation(Placement(visible = true, transformation(origin = {-147.926, 0}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {-20, -110}, extent = {{-16, -16}, {16, 16}}, rotation = -90)));
    parameter Modelica.SIunits.Position r_IboneFDistal[3](start = {0.1, 0, 0}) = {0.5, 0, 0};
    parameter Modelica.SIunits.Position r_shape_IboneFDistal[3] = {0, 0, 0};
    parameter Modelica.SIunits.Position diameterIboneFDistal = 0.02;
    parameter Modelica.SIunits.Position r_OboneFDistal[3](start = {0.1, 0, 0}) = {0.5, 0, 0};
    parameter Modelica.SIunits.Position r_shape_OboneFDistal[3] = {0, 0, 0};
    parameter Modelica.SIunits.Position diameterOboneFDistal = 0.02;
    parameter Modelica.SIunits.Angle phi_0_boneFDistal;
    parameter Modelica.SIunits.Position r_IboneMDistal[3](start = {0.1, 0, 0}) = {0.5, 0, 0};
    parameter Modelica.SIunits.Position r_shape_IboneMDistal[3] = {0, 0, 0};
    parameter Modelica.SIunits.Position diameterIboneMDistal = 0.02;
    parameter Modelica.SIunits.Position r_OboneMDistal[3](start = {0.1, 0, 0}) = {0.5, 0, 0};
    parameter Modelica.SIunits.Position r_shape_OboneMDistal[3] = {0, 0, 0};
    parameter Modelica.SIunits.Position diameterOboneMDistal = 0.02;
    parameter Modelica.SIunits.Angle phi_0_boneMDistal;
    parameter Modelica.SIunits.Position r_IboneCDistal[3](start = {0.1, 0, 0}) = {0.5, 0, 0};
    parameter Modelica.SIunits.Position r_shape_IboneCDistal[3] = {0, 0, 0};
    parameter Modelica.SIunits.Position diameterIboneCDistal = 0.02;
    parameter Modelica.SIunits.Position r_OboneCDistal[3](start = {0.1, 0, 0}) = {0.5, 0, 0};
    parameter Modelica.SIunits.Position r_shape_OboneCDistal[3] = {0, 0, 0};
    parameter Modelica.SIunits.Position diameterOboneCDistal = 0.02;
    parameter Modelica.SIunits.Angle phi_0_boneCDistal;
    parameter Modelica.SIunits.Position baseAnterior[3] = {0, 0, 0};
    parameter Modelica.SIunits.Position basePosterior[3] = {0, 0, 0};
    parameter Modelica.SIunits.Angle phi_0_doubleJoint;
    Modelica.Blocks.Interfaces.RealInput loadForce annotation(Placement(visible = true, transformation(origin = {-101.6, 64.464}, extent = {{-20, -20}, {20, 20}}, rotation = 0), iconTransformation(origin = {27.454, -121.759}, extent = {{-20, -20}, {20, 20}}, rotation = -270)));
    PowerGrab.Components.FingerLoad fingerLoad(r2 = r_OboneMDistal[1], r3 = r_OboneCDistal[1], r1 = r_OboneFDistal[1] / 2) annotation(Placement(visible = true, transformation(origin = {-52.096, 71.024}, extent = {{-13.29, -13.29}, {13.29, 13.29}}, rotation = 0)));
    PowerGrab.Tests.TestDoubleJointComponent boneCDistal(phi_0_doubleJoint = phi_0_doubleJoint) annotation(Placement(visible = true, transformation(origin = {-86.959, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Blocks.Interfaces.RealInput anteriorSideP annotation(Placement(visible = true, transformation(origin = {-91.72199999999999, -31.722}, extent = {{-11.722, -11.722}, {11.722, 11.722}}, rotation = 0), iconTransformation(origin = {-26.064, 50}, extent = {{-20, -20}, {20, 20}}, rotation = 0)));
    Modelica.Blocks.Interfaces.RealInput posteriorSideP annotation(Placement(visible = true, transformation(origin = {-67.86799999999999, -32.132}, extent = {{-12.132, -12.132}, {12.132, 12.132}}, rotation = 0), iconTransformation(origin = {-26.453, -16.562}, extent = {{-20, -20}, {20, 20}}, rotation = 0)));
  equation
    connect(boneCDistal.posteriorDoubleJointMuscle, posteriorSideP) annotation(Line(visible = true, origin = {-74.074, 1.742}, points = {{-6.206, 9.291}, {-6.206, 12.291}, {6.206, 12.291}, {6.206, -33.874}}, color = {0, 0, 127}));
    connect(boneCDistal.anteriorDoubleJointMuscle, anteriorSideP) annotation(Line(visible = true, origin = {-92.45699999999999, -4.373}, points = {{8.308, 15.534}, {8.308, 18.534}, {-9.042999999999999, 18.534}, {-9.042999999999999, -12.627}, {0.735, -12.627}, {0.735, -27.348}}, color = {0, 0, 127}));
    connect(boneMDistal.frame_a, boneCDistal.frame_b2) annotation(Line(visible = true, origin = {-40.732, 0}, points = {{35.988, 0}, {-35.988, 0}}));
    connect(boneCDistal.frame_b1, frame_5P) annotation(Line(visible = true, origin = {-52.186, -40.667}, points = {{-24.373, 31.667}, {12.186, 31.667}, {12.186, -63.333}}));
    connect(boneCDistal.frame_b, frame_5A) annotation(Line(visible = true, origin = {-52.26, 40.667}, points = {{-24.519, -31.667}, {12.26, -31.667}, {12.26, 63.333}}));
    connect(fingerLoad.tau3, boneCDistal.LoadTorque) annotation(Line(visible = true, origin = {-58.959, 35.035}, points = {{18.616, 33.05}, {23.153, 33.05}, {23.153, -21.022}, {-32.461, -21.022}, {-32.461, -24.055}}, color = {0, 0, 127}));
    connect(thetaCDistal, boneCDistal.thetaControl) annotation(Line(visible = true, origin = {-84.545, 21.291}, points = {{20.827, 5.145}, {-10.414, 5.145}, {-10.414, -10.291}}, color = {0, 0, 127}));
    connect(boneCDistal.frame_resolve1, frame_6P) annotation(Line(visible = true, origin = {-91.992, -58.4}, points = {{-4.967, 49.4}, {-9.507999999999999, 49.4}, {-9.507999999999999, -26.6}, {11.992, -26.6}, {11.992, -45.6}}));
    connect(boneCDistal.frame_resolve, frame_6A) annotation(Line(visible = true, origin = {-91.992, 58.4}, points = {{-4.967, -49.4}, {-9.507999999999999, -49.4}, {-9.507999999999999, 26.6}, {11.992, 26.6}, {11.992, 45.6}}, color = {95, 95, 95}));
    connect(posteriorBase.frame_b, boneCDistal.frame_a) annotation(Line(visible = true, origin = {-104.477, -20.875}, points = {{-13.471, -20.875}, {2.977, -20.875}, {2.977, 20.875}, {7.518, 20.875}}));
    connect(anteriorBase.frame_b, boneCDistal.frame_a) annotation(Line(visible = true, origin = {-104.46, 20.875}, points = {{-13.422, 20.875}, {2.96, 20.875}, {2.96, -20.875}, {7.501, -20.875}}));
    connect(frame_a, boneCDistal.frame_a) annotation(Line(visible = true, origin = {-122.442, 0}, points = {{-25.483, 0}, {25.483, 0}}));
    connect(fingerLoad.tau2, boneMDistal.LoadTorque) annotation(Line(visible = true, origin = {-10.011, 46.846}, points = {{-30.534, 25.923}, {15.267, 25.923}, {15.267, -51.846}}, color = {0, 0, 127}));
    connect(fingerLoad.tau1, boneFDistal.LoadTorque) annotation(Line(visible = true, origin = {35.073, 36.21}, points = {{-75.69799999999999, 41.21}, {20.386, 41.21}, {20.386, -41.21}, {34.927, -41.21}}, color = {0, 0, 127}));
    connect(boneMDistal.y, fingerLoad.theta2) annotation(Line(visible = true, origin = {-51.343, 28.568}, points = {{47.099, -34.568}, {-17.043, -34.568}, {-17.043, 34.568}, {-13.013, 34.568}}, color = {0, 0, 127}));
    connect(boneFDistal.y, fingerLoad.theta1) annotation(Line(visible = true, origin = {-35.112, 32.959}, points = {{95.61199999999999, -38.959}, {-33.274, -38.959}, {-33.274, 38.959}, {-29.065, 38.959}}, color = {0, 0, 127}));
    connect(loadForce, fingerLoad.force) annotation(Line(visible = true, origin = {-75.637, 72.17400000000001}, points = {{-25.963, -7.71}, {7.251, -7.71}, {7.251, 7.71}, {11.46, 7.71}}, color = {0, 0, 127}));
    connect(anteriorBase.frame_a, frame_7A) annotation(Line(visible = true, origin = {-131.929, 71.5}, points = {{-5.953, -29.75}, {-8.952999999999999, -29.75}, {-8.952999999999999, 13.5}, {11.929, 13.5}, {11.929, 32.5}}));
    connect(boneMDistal.frame_resolve, frame_4A) annotation(Line(visible = true, origin = {2.628, 71}, points = {{2.628, -61}, {2.628, 14}, {-2.628, 14}, {-2.628, 33}}));
    connect(boneMDistal.frame_b, frame_3A) annotation(Line(visible = true, origin = {31.786, 40.381}, points = {{-16.429, -31.81}, {8.214, -31.81}, {8.214, 63.619}}));
    connect(boneFDistal.frame_resolve, frame_2A) annotation(Line(visible = true, origin = {75, 71}, points = {{-5, -61}, {-5, 14}, {5, 14}, {5, 33}}, color = {95, 95, 95}));
    connect(boneFDistal.frame_b, frame_1A) annotation(Line(visible = true, origin = {106.7, 40.381}, points = {{-26.599, -31.81}, {13.3, -31.81}, {13.3, 63.619}}));
    connect(posteriorBase.frame_a, frame_7P) annotation(Line(visible = true, origin = {-131.969, -71.5}, points = {{-5.979, 29.75}, {-8.978999999999999, 29.75}, {-8.978999999999999, -13.5}, {11.969, -13.5}, {11.969, -32.5}}, color = {95, 95, 95}));
    connect(boneMDistal.frame_resolve1, frame_4P) annotation(Line(visible = true, origin = {2.628, -71}, points = {{2.628, 61}, {2.628, -14}, {-2.628, -14}, {-2.628, -33}}, color = {95, 95, 95}));
    connect(boneMDistal.frame_b1, frame_3P) annotation(Line(visible = true, origin = {31.752, -39.6}, points = {{-16.496, 32.2}, {8.247999999999999, 32.2}, {8.247999999999999, -64.40000000000001}}));
    connect(boneFDistal.frame_resolve1, frame_2P) annotation(Line(visible = true, origin = {75, -71}, points = {{-5, 61}, {-5, -14}, {5, -14}, {5, -33}}, color = {95, 95, 95}));
    connect(boneFDistal.frame_b1, frame_1P) annotation(Line(visible = true, origin = {106.667, -39.6}, points = {{-26.667, 32.2}, {13.333, 32.2}, {13.333, -64.40000000000001}}));
    connect(thetaFDistal, boneFDistal.thetaControl) annotation(Line(visible = true, origin = {84.79600000000001, 14.736}, points = {{14.803, 11.736}, {-0.003, 11.736}, {-0.003, -11.736}, {-14.796, -11.736}}, color = {0, 0, 127}));
    connect(thetaMDistal, boneMDistal.thetaControl) annotation(Line(visible = true, origin = {15.236, 13.27}, points = {{9.978999999999999, 12.784}, {9.978999999999999, -1.257}, {-9.978999999999999, -1.257}, {-9.978999999999999, -10.27}}, color = {0, 0, 127}));
    connect(boneMDistal.frame_b2, boneFDistal.frame_a) annotation(Line(visible = true, origin = {46.569, 0.238}, points = {{-31.212, 0.238}, {8.890000000000001, 0.238}, {8.890000000000001, -0.238}, {13.431, -0.238}}));
    annotation(Icon(coordinateSystem(extent = {{-120, -120}, {120, 120}}, preserveAspectRatio = true, initialScale = 0.1, grid = {10, 10}), graphics = {Polygon(visible = true, origin = {-11.122, -85.083}, fillColor = {0, 0, 255}, fillPattern = FillPattern.VerticalCylinder, points = {{-38.878, -26.42}, {13.483, -26.42}, {34.272, 25.083}, {-8.878, 27.757}}), Polygon(visible = true, origin = {11.791, -38.344}, fillColor = {0, 128, 255}, fillPattern = FillPattern.VerticalCylinder, points = {{-31.791, -21.656}, {11.359, -21.656}, {20.178, 38.344}, {-21.791, 38.344}}), Polygon(visible = true, origin = {11.3, 30}, fillColor = {102, 204, 255}, fillPattern = FillPattern.VerticalCylinder, points = {{-21.3, -30}, {21.3, -30}, {21.3, 30}, {-21.3, 30}}), Polygon(visible = true, origin = {-4.193, 90}, fillColor = {0, 255, 255}, fillPattern = FillPattern.VerticalCylinder, points = {{-5.807, -30}, {37.422, -30}, {4.193, 30}, {-35.807, 30}}), Line(visible = true, origin = {-68.98099999999999, 102.837}, points = {{-46.302, 17.163}, {46.302, -17.163}}), Line(visible = true, origin = {-63.271, 70}, points = {{-53.271, 10}, {53.271, -10}}), Line(visible = true, origin = {-63.586, 40}, points = {{-53.586, 0}, {53.586, 0}}), Line(visible = true, origin = {-63.271, 0}, points = {{-53.271, 0}, {53.271, 0}}), Line(visible = true, origin = {-66.461, -35}, points = {{-50.712, -5}, {50.712, 5}}), Line(visible = true, origin = {-68.271, -70}, points = {{-48.271, -10}, {48.271, 10}}), Line(visible = true, origin = {-76.54000000000001, -101.892}, points = {{-41.262, -18.108}, {41.262, 18.108}}), Line(visible = true, origin = {67.09099999999999, 104.097}, points = {{49.452, 15.903}, {-49.452, -15.903}}), Line(visible = true, origin = {74.02, 40}, points = {{41.892, 0}, {-41.892, 0}}), Line(visible = true, origin = {72.956, 0}, points = {{42.956, 0}, {-42.956, 0}}), Line(visible = true, origin = {71.5, -35}, points = {{44.412, -5}, {-44.412, 5}}), Line(visible = true, origin = {69.926, -70}, points = {{47.247, -10}, {-47.247, 10}}), Line(visible = true, origin = {64.886, -102.522}, points = {{51.657, -17.478}, {-51.657, 17.478}}), Line(visible = true, origin = {73.586, 70}, points = {{43.586, 10}, {-43.586, -10}}), Text(visible = true, origin = {-140, 120}, extent = {{-12.747, -11.808}, {12.747, 11.808}}, textString = "1A"), Text(visible = true, origin = {137.253, 120}, extent = {{-12.747, -11.808}, {12.747, 11.808}}, textString = "1P"), Text(visible = true, origin = {-140, 80}, extent = {{-12.747, -11.808}, {12.747, 11.808}}, textString = "2A"), Text(visible = true, origin = {-140, 40}, extent = {{-12.747, -11.808}, {12.747, 11.808}}, textString = "3A"), Text(visible = true, origin = {-140, 1.808}, extent = {{-12.747, -11.808}, {12.747, 11.808}}, textString = "4A"), Text(visible = true, origin = {-140, -40}, extent = {{-12.747, -11.808}, {12.747, 11.808}}, textString = "5A"), Text(visible = true, origin = {-140, -80}, extent = {{-12.747, -11.808}, {12.747, 11.808}}, textString = "6A"), Text(visible = true, origin = {-140, -118.192}, extent = {{-12.747, -11.808}, {12.747, 11.808}}, textString = "7A"), Text(visible = true, origin = {137.253, 80}, extent = {{-12.747, -11.808}, {12.747, 11.808}}, textString = "2P"), Text(visible = true, origin = {137.253, 40}, extent = {{-12.747, -11.808}, {12.747, 11.808}}, textString = "3P"), Text(visible = true, origin = {137.253, 0}, extent = {{-12.747, -11.808}, {12.747, 11.808}}, textString = "4P"), Text(visible = true, origin = {137.253, -38.192}, extent = {{-12.747, -11.808}, {12.747, 11.808}}, textString = "5P"), Text(visible = true, origin = {137.253, -80}, extent = {{-12.747, -11.808}, {12.747, 11.808}}, textString = "6P"), Text(visible = true, origin = {137.253, -120}, extent = {{-12.747, -11.808}, {12.747, 11.808}}, textString = "7P"), Text(visible = true, origin = {28.74, -151.115}, extent = {{-31.26, -11.115}, {31.26, 11.115}}, textString = "loadForce"), Text(visible = true, origin = {-66.892, 151.505}, extent = {{-16.892, -5.355}, {16.892, 5.355}}, textString = "thetaC"), Text(visible = true, origin = {-10, 151.985}, extent = {{-16.892, -5.355}, {16.892, 5.355}}, textString = "thetaM"), Text(visible = true, origin = {50, 151.834}, extent = {{-16.892, -5.355}, {16.892, 5.355}}, textString = "thetaF")}), Diagram(coordinateSystem(extent = {{-148.5, -105}, {148.5, 105}}, preserveAspectRatio = true, initialScale = 0.01, grid = {10, 10})));
  end TestFingerMultipleRevolute;

  model TestDoubleJointComponent
    Modelica.Mechanics.MultiBody.Parts.BodyCylinder IFingerBone(r = r_IFingerBone, r_shape = r_shape_IFingerBone, color = {155, 0, 0}, diameter = diameterIFingerBone * 10, animation = true, r_0.fixed = false) "The palm bone that is connected via a joint to the finger extension" annotation(Placement(visible = true, transformation(origin = {-55, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.BodyCylinder OFingerExtension(r = r_OFingerBone, r_shape = r_shape_OFingerBone, r_0.start = {0, 0.08, 0}, r_0.fixed = false, color = {255, 255, 0}, diameter = diameterOFingerBone * 10, animation = true, specularCoefficient = 1) "Part of the finger that extends from the palm" annotation(Placement(visible = true, transformation(origin = {30, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.FixedTranslation fixedTranslation1(r = {-r_OFingerBone[1] * 0.5, -diameterOFingerBone * 2.5, 0}) annotation(Placement(visible = true, transformation(origin = {42.218, 23.331}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Joints.Revolute revolute1(animation = false, n = {0, 0, 1}, useAxisFlange = true, phi.fixed = false, phi.start = 1.5) annotation(Placement(visible = true, transformation(origin = {-10, 35}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    PowerGrab.Components.RevoluteRestrained revoluteRestrained(phi_0_restrained = phi_0_restrained, theta_1 = -0.1, theta_2 = 1.6, useAxisFlange = true, stateSelect = true) annotation(Placement(visible = true, transformation(origin = {3.053, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.FixedTranslation fixedTranslation3(r = {-0.5 * r_OFingerBone[1], diameterOFingerBone * 5, 0}) annotation(Placement(visible = true, transformation(origin = {50, -25}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.FixedTranslation fixedTranslation5(r = {diameterOFingerBone * 6, 0, 0}) annotation(Placement(visible = true, transformation(origin = {-10, 60}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.Rotational.Components.Damper damper(useHeatPort = false, d = 200) annotation(Placement(visible = true, transformation(origin = {-35, 55}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.Rotational.Sensors.RelAngleSensor relAngleSensor annotation(Placement(visible = true, transformation(origin = {90, 10}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.Rotational.Sources.Position position annotation(Placement(visible = true, transformation(origin = {62.653, 35}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
    Modelica.Blocks.Math.Add add1(k2 = 0.5) annotation(Placement(visible = true, transformation(origin = {100, 40}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
    Modelica.Blocks.Sources.Constant const2(k = 1.57) annotation(Placement(visible = true, transformation(origin = {135, 65}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
    parameter Modelica.SIunits.Position r_IFingerBone[3](start = {0.1, 0, 0}) = {0.5, 0, 0};
    parameter Modelica.SIunits.Position r_shape_IFingerBone[3] = {0, 0, 0};
    parameter Modelica.SIunits.Position diameterIFingerBone = 0.02;
    parameter Modelica.SIunits.Position r_OFingerBone[3](start = {0.1, 0, 0}) = {0.5, 0, 0};
    parameter Modelica.SIunits.Position r_shape_OFingerBone[3] = {0, 0, 0};
    parameter Modelica.SIunits.Position diameterOFingerBone = 0.02;
    parameter Modelica.SIunits.Angle phi_0_restrained = 0;
    parameter Modelica.SIunits.Angle phi_0_doubleJoint = 0;
    parameter Boolean closedLoop = true "Results in an open loop run when false";
    Modelica.Mechanics.Rotational.Sources.Torque torque annotation(Placement(visible = true, transformation(origin = {110, -20}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_a frame_a annotation(Placement(visible = true, transformation(origin = {-145, -1}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {-100, 0}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
    Modelica.Blocks.Interfaces.RealInput LoadTorque "Value for the torque the load exerts on the joint" annotation(Placement(visible = true, transformation(origin = {153.458, -25}, extent = {{20, -20}, {-20, 20}}, rotation = 0), iconTransformation(origin = {-44.609, 109.799}, extent = {{15.391, -15.391}, {-15.391, 15.391}}, rotation = -270)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_resolve frame_resolve annotation(Placement(visible = true, transformation(origin = {-7.644, 105}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {-100, 90}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_resolve frame_resolve1 annotation(Placement(visible = true, transformation(origin = {0, -105}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {-100, -90}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_b annotation(Placement(visible = true, transformation(origin = {150, 90}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {101.804, 90}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_b1 annotation(Placement(visible = true, transformation(origin = {148.167, -80}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {104, -90}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_b2 annotation(Placement(visible = true, transformation(origin = {150, 5}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {102.392, 0}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
    Modelica.Mechanics.Rotational.Sources.Position position2 if closedLoop annotation(Placement(visible = true, transformation(origin = {122.06, 15}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
    Modelica.Blocks.Interfaces.RealInput thetaControl if closedLoop annotation(Placement(visible = true, transformation(origin = {155, 42.881}, extent = {{20, -20}, {-20, 20}}, rotation = 0), iconTransformation(origin = {-80, 110}, extent = {{15, -15}, {-15, 15}}, rotation = -270)));
    Modelica.Blocks.Interfaces.RealOutput y annotation(Placement(visible = true, transformation(origin = {157.74, -46.967}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {6.023, -120}, extent = {{-20, -20}, {20, 20}}, rotation = -450)));
    PowerGrab.Components.RevoluteRestrained doubleJointRevolute(useAxisFlange = true, theta_1 = -0.87, theta_2 = 0.87, phi_0_restrained = phi_0_doubleJoint, axisRotation = {0, 1, 0}) annotation(Placement(visible = true, transformation(origin = {-25, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.FixedTranslation fixedTranslation(r = {-r_IFingerBone[1] * 0.5, 0, diameterOFingerBone * 1}) annotation(Placement(visible = true, transformation(origin = {-85, 75}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.FixedTranslation fixedTranslation2(r = {-r_IFingerBone[1] * 0.5, 0, diameterOFingerBone * 5}) annotation(Placement(visible = true, transformation(origin = {-65, -80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.FixedTranslation fixedTranslation6(r = {-r_OFingerBone[1] * 0.5, 0, -diameterOFingerBone * 5}) annotation(Placement(visible = true, transformation(origin = {50, 70}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.FixedTranslation fixedTranslation7(r = {-r_OFingerBone[1] * 0.5, 0, diameterOFingerBone * 5}) annotation(Placement(visible = true, transformation(origin = {35, -96.736}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
    PowerGrab.Components.LineMuscle lineMuscle annotation(Placement(visible = true, transformation(origin = {-43.039, 75}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    PowerGrab.Components.LineMuscle lineMuscle1 annotation(Placement(visible = true, transformation(origin = {25, 75}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
    PowerGrab.Components.LineMuscle lineMuscle2 annotation(Placement(visible = true, transformation(origin = {-35, -85}, extent = {{-10, 10}, {10, -10}}, rotation = 0)));
    PowerGrab.Components.LineMuscle lineMuscle3 annotation(Placement(visible = true, transformation(origin = {25, -70}, extent = {{-10, 10}, {10, -10}}, rotation = 0)));
    PowerGrab.Components.MagnitudeMuscle magnitudeMuscle(f_max = 200000) annotation(Placement(visible = true, transformation(origin = {-110, -87.842}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    PowerGrab.Components.MagnitudeMuscle magnitudeMuscle1(f_max = 200) annotation(Placement(visible = true, transformation(origin = {-115, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Blocks.Interfaces.RealInput anteriorDoubleJointMuscle annotation(Placement(visible = true, transformation(origin = {-148.467, 80}, extent = {{-20, -20}, {20, 20}}, rotation = 0), iconTransformation(origin = {28.108, 111.603}, extent = {{-14.789, -14.789}, {14.789, 14.789}}, rotation = -90)));
    Modelica.Blocks.Interfaces.RealInput posteriorDoubleJointMuscle annotation(Placement(visible = true, transformation(origin = {-148.053, -88.256}, extent = {{-20, -20}, {20, 20}}, rotation = 0), iconTransformation(origin = {66.792, 110.334}, extent = {{-14.988, -14.988}, {14.988, 14.988}}, rotation = -90)));
    Modelica.Mechanics.Rotational.Components.Damper damper2(d = 200, useHeatPort = false) annotation(Placement(visible = true, transformation(origin = {-23.775, 155}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.FixedTranslation fixedTranslation8(r = {diameterOFingerBone * 6, 0, 0}) annotation(Placement(visible = true, transformation(origin = {1.225, 160}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Joints.Revolute revolute3(animation = false, n = {0, 1, 0}, phi.fixed = false, phi.start = 1.5, useAxisFlange = true) annotation(Placement(visible = true, transformation(origin = {1.225, 135}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.Rotational.Sensors.RelAngleSensor relAngleSensor2 annotation(Placement(visible = true, transformation(origin = {-130, 175}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.Rotational.Sources.Position position4(useSupport = false) annotation(Placement(visible = true, transformation(origin = {-105, 126.351}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Blocks.Sources.Constant const4(k = 1.57) annotation(Placement(visible = true, transformation(origin = {-135, 136.117}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Blocks.Math.Add add3(k1 = 0.5, k2 = 1) annotation(Placement(visible = true, transformation(origin = {-107.443, 153.649}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.FixedTranslation fixedTranslation9(r = {-diameterOFingerBone * 6, 0, 0}) annotation(Placement(visible = true, transformation(origin = {15, -35}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.FixedTranslation fixedTranslation10(r = {-diameterOFingerBone * 6, 0, 0}) annotation(Placement(visible = true, transformation(origin = {-32.821, -31.96}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  equation
    connect(fixedTranslation9.frame_a, revolute3.frame_b) annotation(Line(visible = true, origin = {8.117000000000001, 26}, points = {{-3.117, -61}, {-6.117, -61}, {-6.117, -48}, {6.121, -48}, {6.121, 109}, {3.108, 109}}));
    connect(position2.flange, revoluteRestrained.flange_a) annotation(Line(visible = true, origin = {41.053, 13.333}, points = {{71.00700000000001, 1.667}, {-35.503, 1.667}, {-35.503, -3.333}}));
    connect(thetaControl, position2.phi_ref) annotation(Line(visible = true, origin = {148.02, 24.294}, points = {{6.98, 18.587}, {6.98, -9.294}, {-13.96, -9.294}}, color = {0, 0, 127}));
    connect(lineMuscle.frame_b, fixedTranslation8.frame_b) annotation(Line(visible = true, origin = {1.715, 117.3}, points = {{-34.754, -42.7}, {12.622, -42.7}, {12.622, 42.7}, {9.51, 42.7}}));
    connect(lineMuscle.frame_a, fixedTranslation.frame_b) annotation(Line(visible = true, origin = {-67.95399999999999, 74.8}, points = {{14.915, -0.2}, {-3.934, -0.2}, {-3.934, 0.2}, {-7.046, 0.2}}));
    connect(lineMuscle1.frame_a, fixedTranslation6.frame_b) annotation(Line(visible = true, origin = {38.194, 72.3}, points = {{-3.194, 2.3}, {0.694, 2.3}, {0.694, -2.3}, {1.806, -2.3}}));
    connect(lineMuscle1.frame_b, fixedTranslation8.frame_b) annotation(Line(visible = true, origin = {13.075, 107.533}, points = {{1.925, -32.933}, {-1.3, -32.933}, {-1.3, -19.533}, {1.263, -19.533}, {1.263, 52.467}, {-1.85, 52.467}}));
    connect(fixedTranslation10.frame_b, frame_resolve1) annotation(Line(visible = true, origin = {-7.607, -56.307}, points = {{-15.214, 24.347}, {7.607, 24.347}, {7.607, -48.693}}));
    connect(revolute1.frame_b, fixedTranslation10.frame_a) annotation(Line(visible = true, origin = {-21.406, 8.347}, points = {{21.406, 26.653}, {24.419, 26.653}, {24.419, 13.653}, {-24.415, 13.653}, {-24.415, -40.307}, {-21.415, -40.307}}));
    connect(revolute1.frame_a, doubleJointRevolute.frame_b) annotation(Line(visible = true, origin = {-17.913, 19}, points = {{-2.087, 16}, {-5.1, 16}, {-5.1, 3}, {5.913, 3}, {5.913, -19}, {0.461, -19}}));
    connect(lineMuscle3.frame_b, fixedTranslation9.frame_b) annotation(Line(visible = true, origin = {34.112, -52.3}, points = {{0.888, -17.3}, {4.113, -17.3}, {4.113, 17.3}, {-9.112, 17.3}}));
    connect(lineMuscle2.frame_b, fixedTranslation9.frame_b) annotation(Line(visible = true, origin = {14.056, -59.8}, points = {{-39.056, -24.8}, {14.056, -24.8}, {14.056, 24.8}, {10.944, 24.8}}));
    connect(lineMuscle3.frame_a, fixedTranslation7.frame_b) annotation(Line(visible = true, origin = {15.887, -83.16800000000001}, points = {{-0.887, 13.568}, {-4.113, 13.568}, {-4.113, -13.568}, {9.113, -13.568}}));
    connect(fixedTranslation7.frame_a, OFingerExtension.frame_b) annotation(Line(visible = true, origin = {45.25, -48.368}, points = {{-0.25, -48.368}, {2.75, -48.368}, {2.75, 48.368}, {-5.25, 48.368}}));
    connect(fixedTranslation6.frame_a, OFingerExtension.frame_b) annotation(Line(visible = true, origin = {56.5, 35}, points = {{3.5, 35}, {6.5, 35}, {6.5, -35}, {-16.5, -35}}, color = {95, 95, 95}));
    connect(IFingerBone.frame_b, fixedTranslation2.frame_a) annotation(Line(visible = true, origin = {-59.996, -31}, points = {{14.996, 31}, {18.008, 31}, {18.008, 18}, {-18.004, 18}, {-18.004, -49}, {-15.004, -49}}));
    connect(IFingerBone.frame_b, fixedTranslation.frame_a) annotation(Line(visible = true, origin = {-69.996, 29.333}, points = {{24.996, -29.333}, {28.008, -29.333}, {28.008, -16.333}, {-28.004, -16.333}, {-28.004, 45.667}, {-25.004, 45.667}}));
    connect(position4.flange, revolute3.axis) annotation(Line(visible = true, origin = {-55.305, 138.83}, points = {{-39.695, -12.479}, {-36.683, -12.479}, {-36.683, 9.395}, {56.53, 9.395}, {56.53, 6.17}}));
    connect(relAngleSensor2.phi_rel, add3.u1) annotation(Line(visible = true, origin = {-126.481, 161.099}, points = {{-3.519, 2.901}, {-3.519, -1.45}, {7.038, -1.45}}, color = {0, 0, 127}));
    connect(add3.y, position4.phi_ref) annotation(Line(visible = true, origin = {-106.721, 140.212}, points = {{10.278, 13.437}, {13.278, 13.437}, {13.278, 0.424}, {-13.279, 0.424}, {-13.279, -13.861}, {-10.279, -13.861}}, color = {0, 0, 127}));
    connect(const4.y, add3.u2) annotation(Line(visible = true, origin = {-121.082, 141.883}, points = {{-2.918, -5.766}, {0.639, -5.766}, {0.639, 5.766}, {1.639, 5.766}}, color = {0, 0, 127}));
    connect(relAngleSensor.phi_rel, y) annotation(Line(visible = true, origin = {112.58, -31.645}, points = {{-22.58, 30.645}, {-22.58, -15.322}, {45.16, -15.322}}, color = {0, 0, 127}));
    connect(relAngleSensor2.flange_b, doubleJointRevolute.flange_a) annotation(Line(visible = true, origin = {-55.002, 120}, points = {{-64.998, 55}, {32.499, 55}, {32.499, -110}}));
    connect(relAngleSensor2.flange_a, doubleJointRevolute.flange_b) annotation(Line(visible = true, origin = {-96.102, 77.2}, points = {{-43.898, 97.8}, {-46.898, 97.8}, {-46.898, -64.2}, {68.84699999999999, -64.2}, {68.84699999999999, -67.2}}));
    connect(revolute3.frame_a, IFingerBone.frame_b) annotation(Line(visible = true, origin = {-34.438, 67.5}, points = {{25.663, 67.5}, {-7.55, 67.5}, {-7.55, -67.5}, {-10.562, -67.5}}));
    connect(damper2.flange_b, revolute3.axis) annotation(Line(visible = true, origin = {-3.775, 151.667}, points = {{-10, 3.333}, {5, 3.333}, {5, -6.667}}));
    connect(damper2.flange_a, revolute3.support) annotation(Line(visible = true, origin = {-19.839, 147.857}, points = {{-13.936, 7.143}, {-15.161, 7.143}, {-15.161, -4.082}, {7.064, -4.082}, {7.064, -1.632}, {15.064, -1.632}, {15.064, -2.857}}));
    connect(revolute3.frame_b, fixedTranslation8.frame_a) annotation(Line(visible = true, origin = {1.229, 147.075}, points = {{9.996, -12.075}, {11.008, -12.075}, {11.008, -0.85}, {-11.004, -0.85}, {-11.004, 12.925}, {-10.004, 12.925}}));
    connect(posteriorDoubleJointMuscle, magnitudeMuscle.forcePValue) annotation(Line(visible = true, origin = {-128.296, -88.333}, points = {{-19.757, 0.077}, {5.071, 0.077}, {5.071, -0.077}, {9.615, -0.077}}, color = {0, 0, 127}));
    connect(anteriorDoubleJointMuscle, magnitudeMuscle1.forcePValue) annotation(Line(visible = true, origin = {-131.149, 79.71599999999999}, points = {{-17.318, 0.284}, {4.924, 0.284}, {4.924, -0.284}, {7.469, -0.284}}, color = {0, 0, 127}));
    connect(magnitudeMuscle1.fMagnitude, lineMuscle1.muscleMagnitude) annotation(Line(visible = true, origin = {-51.389, 83.883}, points = {{-52.926, -4.474}, {-49.926, -4.474}, {-49.926, 4.117}, {76.389, 4.117}, {76.389, 0.715}}, color = {0, 0, 127}));
    connect(magnitudeMuscle1.fMagnitude, lineMuscle.muscleMagnitude) annotation(Line(visible = true, origin = {-78.605, 83.883}, points = {{-25.71, -4.474}, {-22.71, -4.474}, {-22.71, 4.117}, {35.566, 4.117}, {35.566, 0.715}}, color = {0, 0, 127}));
    connect(magnitudeMuscle.fMagnitude, lineMuscle3.muscleMagnitude) annotation(Line(visible = true, origin = {-16.438, -85.488}, points = {{-82.877, -2.945}, {41.438, -2.945}, {41.438, 5.889}}, color = {0, 0, 127}));
    connect(magnitudeMuscle.fMagnitude, lineMuscle2.muscleMagnitude) annotation(Line(visible = true, origin = {-72.389, -93.49299999999999}, points = {{-26.926, 5.06}, {-23.926, 5.06}, {-23.926, -4.507}, {37.389, -4.507}, {37.389, -1.106}}, color = {0, 0, 127}));
    connect(fixedTranslation2.frame_b, lineMuscle2.frame_a) annotation(Line(visible = true, origin = {-49.112, -82.3}, points = {{-5.888, 2.3}, {0.887, 2.3}, {0.887, -2.3}, {4.112, -2.3}}));
    connect(doubleJointRevolute.frame_b, revoluteRestrained.frame_a) annotation(Line(visible = true, origin = {-10.997, 0}, points = {{-6.454, 0}, {6.454, 0}}));
    connect(IFingerBone.frame_b, doubleJointRevolute.frame_a) annotation(Line(visible = true, origin = {-38.798, 0}, points = {{-6.202, 0}, {6.202, 0}}));
    connect(frame_a, IFingerBone.frame_a) annotation(Line(visible = true, origin = {-86.506, -0.5}, points = {{-58.494, -0.5}, {18.494, -0.5}, {18.494, 0.5}, {21.506, 0.5}}));
    connect(OFingerExtension.frame_b, frame_b2) annotation(Line(visible = true, origin = {113, 2.5}, points = {{-73, -2.5}, {18, -2.5}, {18, 2.5}, {37, 2.5}}));
    connect(frame_resolve, fixedTranslation5.frame_b) annotation(Line(visible = true, origin = {-1.813, 79.40000000000001}, points = {{-5.831, 25.6}, {-5.831, 6.6}, {4.925, 6.6}, {4.925, -19.4}, {1.813, -19.4}}, color = {95, 95, 95}));
    connect(frame_b1, fixedTranslation3.frame_b) annotation(Line(visible = true, origin = {65.486, -52.5}, points = {{82.681, -27.5}, {-28.598, -27.5}, {-28.598, 27.5}, {-25.486, 27.5}}));
    connect(frame_b, fixedTranslation1.frame_b) annotation(Line(visible = true, origin = {60.107, 56.665}, points = {{89.893, 33.335}, {-31.002, 33.335}, {-31.002, -33.334}, {-27.889, -33.334}}));
    connect(LoadTorque, torque.tau) annotation(Line(visible = true, origin = {131.364, -22.5}, points = {{22.094, -2.5}, {-6.364, -2.5}, {-6.364, 2.5}, {-9.364000000000001, 2.5}}, color = {0, 0, 127}));
    connect(torque.flange, revoluteRestrained.flange_a) annotation(Line(visible = true, origin = {61.02, -0.8}, points = {{38.98, -19.2}, {35.98, -19.2}, {35.98, 13.8}, {-55.47, 13.8}, {-55.47, 10.8}}));
    connect(position.flange, revolute1.axis) annotation(Line(visible = true, origin = {26.387, 42.29}, points = {{26.266, -7.29}, {23.254, -7.29}, {23.254, 5.935}, {-36.387, 5.935}, {-36.387, 2.71}}));
    connect(const2.y, add1.u1) annotation(Line(visible = true, origin = {116.5, 55.5}, points = {{7.5, 9.5}, {-1.5, 9.5}, {-1.5, -9.5}, {-4.5, -9.5}}, color = {0, 0, 127}));
    connect(add1.y, position.phi_ref) annotation(Line(visible = true, origin = {79.73999999999999, 37.5}, points = {{9.26, 2.5}, {-2.087, 2.5}, {-2.087, -2.5}, {-5.087, -2.5}}, color = {0, 0, 127}));
    connect(relAngleSensor.phi_rel, add1.u2) annotation(Line(visible = true, origin = {104.4, 11.8}, points = {{-14.4, -12.8}, {-14.4, -15.8}, {10.6, -15.8}, {10.6, 22.2}, {7.6, 22.2}}, color = {0, 0, 127}));
    connect(revoluteRestrained.flange_a, relAngleSensor.flange_b) annotation(Line(visible = true, origin = {63.42, 15.2}, points = {{-57.87, -5.2}, {-57.87, 7.8}, {39.58, 7.8}, {39.58, -5.2}, {36.58, -5.2}}));
    connect(revoluteRestrained.flange_b, relAngleSensor.flange_a) annotation(Line(visible = true, origin = {47.119, 11.2}, points = {{-46.321, -1.2}, {-46.321, 1.8}, {29.881, 1.8}, {29.881, -1.2}, {32.881, -1.2}}));
    connect(damper.flange_b, revolute1.axis) annotation(Line(visible = true, origin = {-15, 51.667}, points = {{-10, 3.333}, {5, 3.333}, {5, -6.667}}));
    connect(damper.flange_a, revolute1.support) annotation(Line(visible = true, origin = {-31.064, 47.857}, points = {{-13.936, 7.143}, {-15.161, 7.143}, {-15.161, -4.082}, {7.064, -4.082}, {7.064, -1.632}, {15.064, -1.632}, {15.064, -2.857}}));
    connect(revolute1.frame_b, fixedTranslation5.frame_a) annotation(Line(visible = true, origin = {-9.996, 47.075}, points = {{9.996, -12.075}, {11.008, -12.075}, {11.008, -0.85}, {-11.004, -0.85}, {-11.004, 12.925}, {-10.004, 12.925}}));
    connect(fixedTranslation3.frame_a, OFingerExtension.frame_b) annotation(Line(visible = true, origin = {55.5, -12.5}, points = {{4.5, -12.5}, {5.5, -12.5}, {5.5, 12.5}, {-15.5, 12.5}}));
    connect(OFingerExtension.frame_a, revoluteRestrained.frame_b) annotation(Line(visible = true, origin = {15.301, 0}, points = {{4.699, 0}, {-4.699, 0}}));
    connect(fixedTranslation1.frame_a, OFingerExtension.frame_b) annotation(Line(visible = true, origin = {49.663, 11.665}, points = {{2.555, 11.665}, {3.555, 11.665}, {3.555, -11.665}, {-9.663, -11.665}}));
    annotation(Icon(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = true, initialScale = 0.01, grid = {10, 10}), graphics = {Text(visible = true, origin = {16.416, 7.879}, extent = {{-30.831, -12.121}, {30.831, 12.121}}, textString = "RevoluteJointTheta"), Text(visible = true, origin = {10, -71.652}, extent = {{-22.832, -14.19}, {22.832, 14.19}}, textString = "LoadTorque"), Rectangle(visible = true, origin = {1.26, 0}, fillColor = {0, 128, 255}, fillPattern = FillPattern.Solid, extent = {{-116.543, -110}, {116.543, 110}}), Text(visible = true, origin = {-90, 134.588}, extent = {{-25, -5.412}, {25, 5.412}}, textString = "thetaControl"), Text(visible = true, origin = {-30, 134.588}, extent = {{-25, -5.412}, {25, 5.412}}, textString = "LoadControl"), Text(visible = true, origin = {26.387, 132.697}, extent = {{-21.43, -4.615}, {21.43, 4.615}}, textString = "anteriorSide"), Text(visible = true, origin = {76.337, 133.102}, extent = {{-24.16, -5.203}, {24.16, 5.203}}, textString = "posteriorSide")}), experiment(StopTime = 12.0), Diagram(coordinateSystem(extent = {{-148.5, -105}, {148.5, 105}}, preserveAspectRatio = true, initialScale = 0.1, grid = {5, 5})));
  end TestDoubleJointComponent;

  model TestFingerRevoluteModel
    PowerGrab.Components.FingerMuscleLineArray anteriorMuscleArray(maxFDistal = 200, maxMDistal = 200, maxCDistal = 200) annotation(Placement(visible = true, transformation(origin = {-120, 15}, extent = {{-51.322, -51.322}, {51.322, 51.322}}, rotation = 0)));
    PowerGrab.Components.FingerMuscleLineArray posteriorMuscleArray(maxFDistal = 200, maxMDistal = 200, maxCDistal = 200) annotation(Placement(visible = true, transformation(origin = {137.5, 15}, extent = {{52.5, -52.5}, {-52.5, 52.5}}, rotation = 0)));
    Modelica.Blocks.Sources.Constant const3(k = 0) annotation(Placement(visible = true, transformation(origin = {230, -22.26}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
    Modelica.Blocks.Sources.Constant const4(k = 0) annotation(Placement(visible = true, transformation(origin = {220, 15}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
    Modelica.Blocks.Sources.Constant const8(k = 0) annotation(Placement(visible = true, transformation(origin = {55, -92.056}, extent = {{-10, -10}, {10, 10}}, rotation = -270)));
    Modelica.Blocks.Sources.Trapezoid trapezoid(amplitude = 0, rising = 3, width = 3, falling = 3, period = 12, offset = 0) annotation(Placement(visible = true, transformation(origin = {-15, 105}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));
    Modelica.Blocks.Sources.Trapezoid trapezoid1(period = 12, rising = 3.5, width = 2.5, falling = 3.5, amplitude = 0, offset = 0) annotation(Placement(visible = true, transformation(origin = {7.511, 133.054}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));
    Modelica.Blocks.Sources.Trapezoid trapezoid2(amplitude = 0, rising = 4, width = 2, falling = 4, period = 12, offset = 0) annotation(Placement(visible = true, transformation(origin = {40, 130}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));
    Modelica.Mechanics.MultiBody.Parts.BodyShape debug6A(m = 0.0001, shapeType = "sphere", r = {0, 0, 0}, r_CM = {0, 0, 0}, sphereDiameter = 0.05, sphereColor = {255, 0, 255}) annotation(Placement(visible = true, transformation(origin = {-103.481, 95}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.BodyShape debug7A(m = 0.0001, r = {0, 0, 0}, r_CM = {0, 0, 0}, shapeType = "sphere", sphereColor = {255, 255, 0}, sphereDiameter = 0.05) annotation(Placement(visible = true, transformation(origin = {-50, -56.863}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.BodyShape debug6P(m = 0.0001, r = {0, 0, 0}, r_CM = {0, 0, 0}, shapeType = "sphere", sphereColor = {0, 230, 0}, sphereDiameter = 0.05) annotation(Placement(visible = true, transformation(origin = {90, 91.723}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.BodyShape debug7P(m = 0.0001, r = {0, 0, 0}, r_CM = {0, 0, 0}, shapeType = "sphere", sphereColor = {0, 128, 255}, sphereDiameter = 0.05) annotation(Placement(visible = true, transformation(origin = {100, -60}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    inner Modelica.Mechanics.MultiBody.World world(g = 0) annotation(Placement(visible = true, transformation(origin = {-123.227, -75}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.FixedRotation fixedRotation(angle = 90, n = {0, 0, 1}) annotation(Placement(visible = true, transformation(origin = {-88.194, -75}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Blocks.Sources.Ramp ramp(duration = 10, height = 0) annotation(Placement(visible = true, transformation(origin = {-260, 50}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Blocks.Sources.Constant const5(k = 0) annotation(Placement(visible = true, transformation(origin = {225, 55}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
    Modelica.Blocks.Sources.Ramp ramp1(duration = 10, height = 0) annotation(Placement(visible = true, transformation(origin = {-230, 12.844}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Blocks.Sources.Ramp ramp2(duration = 10, height = 0, offset = 0) annotation(Placement(visible = true, transformation(origin = {-225, -26.822}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    PowerGrab.Tests.TestFingerMultipleRevolute fingerMultipleRevoluteArray(phi_0_boneFDistal = 0, phi_0_boneCDistal = 0, phi_0_boneMDistal = 0, phi_0_doubleJoint = 0.15, baseAnterior = {0.12, 0, 0}, basePosterior = {0.12, 0, 0}) annotation(Placement(visible = true, transformation(origin = {10.007, 13.287}, extent = {{-55.007, -55.007}, {55.007, 55.007}}, rotation = 0)));
    Modelica.Blocks.Sources.Trapezoid trapezoid3(amplitude = 0, falling = 0.1, offset = 0, period = 12, rising = 0.1, width = 4) annotation(Placement(visible = true, transformation(origin = {-172.105, 103.355}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));
    Modelica.Blocks.Sources.Trapezoid trapezoid4(amplitude = 0, falling = 0.1, offset = 1, period = 12, rising = 0.1, width = 4, startTime = 0) annotation(Placement(visible = true, transformation(origin = {-215, 105}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));
  equation
    connect(trapezoid4.y, fingerMultipleRevoluteArray.posteriorSideP) annotation(Line(visible = true, origin = {-144.04, 35.13}, points = {{-70.95999999999999, 58.87}, {-70.95999999999999, -29.435}, {141.921, -29.435}}, color = {0, 0, 127}));
    connect(trapezoid3.y, fingerMultipleRevoluteArray.anteriorSideP) annotation(Line(visible = true, origin = {-87.023, 68.303}, points = {{-85.08199999999999, 24.052}, {-85.08199999999999, 4.022}, {85.08199999999999, 4.022}, {85.08199999999999, -32.097}}, color = {0, 0, 127}));
    connect(fixedRotation.frame_b, fingerMultipleRevoluteArray.frame_a) annotation(Line(visible = true, origin = {-25.505, -62.379}, points = {{-52.689, -12.621}, {26.344, -12.621}, {26.344, 25.243}}));
    connect(const8.y, fingerMultipleRevoluteArray.loadForce) annotation(Line(visible = true, origin = {38.796, -53.771}, points = {{16.204, -27.285}, {16.204, 8.02}, {-16.204, 8.02}, {-16.204, 11.245}}, color = {0, 0, 127}));
    connect(debug6P.frame_a, fingerMultipleRevoluteArray.frame_6P) annotation(Line(visible = true, origin = {70.261, 34.085}, points = {{9.739000000000001, 57.638}, {-2.246, 57.638}, {-2.246, -57.638}, {-5.246, -57.638}}));
    connect(debug7P.frame_a, fingerMultipleRevoluteArray.frame_7P) annotation(Line(visible = true, origin = {73.215, -53.907}, points = {{16.785, -6.093}, {-8.391999999999999, -6.093}, {-8.391999999999999, 12.187}}));
    connect(debug7A.frame_a, fingerMultipleRevoluteArray.frame_7A) annotation(Line(visible = true, origin = {-54.327, -48.551}, points = {{-5.673, -8.311999999999999}, {-6.685, -8.311999999999999}, {-6.685, 4.799}, {9.522, 4.799}, {9.522, 7.026}}));
    connect(debug6A.frame_b, fingerMultipleRevoluteArray.frame_6A) annotation(Line(visible = true, origin = {-58.601, 35.871}, points = {{-34.88, 59.129}, {10.577, 59.129}, {10.577, -59.129}, {13.727, -59.129}}));
    connect(trapezoid2.y, fingerMultipleRevoluteArray.thetaFDistal) annotation(Line(visible = true, origin = {36.463, 84.64400000000001}, points = {{3.537, 34.356}, {3.537, -10.452}, {-3.537, -10.452}, {-3.537, -13.452}}, color = {0, 0, 127}));
    connect(trapezoid1.y, fingerMultipleRevoluteArray.thetaMDistal) annotation(Line(visible = true, origin = {6.467, 85.459}, points = {{1.044, 36.595}, {1.044, -11.198}, {-1.044, -11.198}, {-1.044, -14.198}}, color = {0, 0, 127}));
    connect(trapezoid.y, fingerMultipleRevoluteArray.thetaCDistal) annotation(Line(visible = true, origin = {-17.818, 78.28100000000001}, points = {{2.818, 15.719}, {2.818, -4.24}, {-2.818, -4.24}, {-2.818, -7.24}}, color = {0, 0, 127}));
    connect(posteriorMuscleArray.frame_1, fingerMultipleRevoluteArray.frame_1P) annotation(Line(visible = true, origin = {71.581, 67.157}, points = {{13.419, -1.232}, {-3.473, -1.232}, {-3.473, 1.232}, {-6.473, 1.232}}));
    connect(posteriorMuscleArray.frame_2, fingerMultipleRevoluteArray.frame_2P) annotation(Line(visible = true, origin = {71.587, 49.017}, points = {{13.413, -0.9419999999999999}, {-3.471, -0.9419999999999999}, {-3.471, 0.9419999999999999}, {-6.471, 0.9419999999999999}}, color = {95, 95, 95}));
    connect(posteriorMuscleArray.frame_3, fingerMultipleRevoluteArray.frame_3P) annotation(Line(visible = true, origin = {71.48999999999999, 31.145}, points = {{13.51, -0.395}, {-3.476, -0.395}, {-3.476, 0.395}, {-6.559, 0.395}}));
    connect(posteriorMuscleArray.frame_4, fingerMultipleRevoluteArray.frame_4P) annotation(Line(visible = true, origin = {71.44199999999999, 13.252}, points = {{13.558, 0.239}, {-3.428, 0.239}, {-3.428, -0.239}, {-6.702, -0.239}}));
    connect(posteriorMuscleArray.frame_5, fingerMultipleRevoluteArray.frame_5P) annotation(Line(visible = true, origin = {71.496, -4.265}, points = {{13.504, 0.843}, {-3.481, 0.843}, {-3.481, -0.843}, {-6.541, -0.843}}));
    connect(posteriorMuscleArray.frame_6, fingerMultipleRevoluteArray.frame_6P) annotation(Line(visible = true, origin = {71.511, -21.997}, points = {{13.489, 1.557}, {-3.496, 1.557}, {-3.496, -1.557}, {-6.496, -1.557}}));
    connect(posteriorMuscleArray.frame_7, fingerMultipleRevoluteArray.frame_7P) annotation(Line(visible = true, origin = {74.911, -42.681}, points = {{10.089, 5.181}, {10.089, -3.071}, {-10.089, -3.071}, {-10.089, 0.961}}));
    connect(anteriorMuscleArray.frame_7, fingerMultipleRevoluteArray.frame_7A) annotation(Line(visible = true, origin = {-56.742, -42.337}, points = {{-11.936, 6.015}, {-11.936, -3.414}, {11.936, -3.414}, {11.936, 0.8120000000000001}}));
    connect(anteriorMuscleArray.frame_6, fingerMultipleRevoluteArray.frame_6A) annotation(Line(visible = true, origin = {-52.4, -21.452}, points = {{-16.278, 1.807}, {4.376, 1.807}, {4.376, -1.807}, {7.526, -1.807}}));
    connect(anteriorMuscleArray.frame_5, fingerMultipleRevoluteArray.frame_5A) annotation(Line(visible = true, origin = {-52.429, -4.023}, points = {{-16.249, 1.015}, {4.405, 1.015}, {4.405, -1.015}, {7.44, -1.015}}));
    connect(anteriorMuscleArray.frame_4, fingerMultipleRevoluteArray.frame_4A) annotation(Line(visible = true, origin = {-52.432, 13.404}, points = {{-16.246, 0.12}, {4.408, 0.12}, {4.408, -0.12}, {7.429, -0.12}}));
    connect(anteriorMuscleArray.frame_3, fingerMultipleRevoluteArray.frame_3A) annotation(Line(visible = true, origin = {-52.404, 30.956}, points = {{-16.274, -0.5590000000000001}, {4.381, -0.5590000000000001}, {4.381, 0.5590000000000001}, {7.513, 0.5590000000000001}}, color = {95, 95, 95}));
    connect(anteriorMuscleArray.frame_2, fingerMultipleRevoluteArray.frame_2A) annotation(Line(visible = true, origin = {-52.431, 48.646}, points = {{-16.247, -1.313}, {4.408, -1.313}, {4.408, 1.313}, {7.431, 1.313}}, color = {95, 95, 95}));
    connect(anteriorMuscleArray.frame_1, fingerMultipleRevoluteArray.frame_1A) annotation(Line(visible = true, origin = {-57.953, 68.47499999999999}, points = {{-10.725, -3.693}, {-7.725, -3.693}, {-7.725, 3.85}, {13.087, 3.85}, {13.087, -0.314}}));
    connect(ramp2.y, anteriorMuscleArray.perCDistal) annotation(Line(visible = true, origin = {-184.839, -25.714}, points = {{-29.161, -1.108}, {7.822, -1.108}, {7.822, 1.108}, {13.517, 1.108}}, color = {0, 0, 127}));
    connect(ramp1.y, anteriorMuscleArray.perMDistal) annotation(Line(visible = true, origin = {-186.089, 12.7}, points = {{-32.911, 0.144}, {9.071999999999999, 0.144}, {9.071999999999999, -0.144}, {14.767, -0.144}}, color = {0, 0, 127}));
    connect(const5.y, posteriorMuscleArray.perFDistal) annotation(Line(visible = true, origin = {198.57, 54.403}, points = {{15.43, 0.597}, {-2.812, 0.597}, {-2.812, -0.597}, {-9.807, -0.597}}, color = {0, 0, 127}));
    connect(ramp.y, anteriorMuscleArray.perFDistal) annotation(Line(visible = true, origin = {-193.287, 51.467}, points = {{-55.713, -1.467}, {16.269, -1.467}, {16.269, 1.467}, {23.175, 1.467}}, color = {0, 0, 127}));
    connect(world.frame_b, fixedRotation.frame_a) annotation(Line(visible = true, origin = {-105.711, -75}, points = {{-7.516, 0}, {7.517, 0}}));
    connect(const3.y, posteriorMuscleArray.perCDistal) annotation(Line(visible = true, origin = {200.129, -23.888}, points = {{18.871, 1.628}, {-4.371, 1.628}, {-4.371, -1.628}, {-10.129, -1.628}}, color = {0, 0, 127}));
    connect(const4.y, posteriorMuscleArray.perMDistal) annotation(Line(visible = true, origin = {197.629, 13.75}, points = {{11.371, 1.25}, {-1.871, 1.25}, {-1.871, -1.25}, {-7.629, -1.25}}, color = {0, 0, 127}));
    annotation(experiment(StopTime = 12.0), Diagram(coordinateSystem(extent = {{-148.5, -105}, {148.5, 105}}, preserveAspectRatio = true, initialScale = 0.1, grid = {5, 5})));
  end TestFingerRevoluteModel;

  model TestDoubleJointFinger
    Modelica.Mechanics.MultiBody.Parts.FixedTranslation anteriorBase(r = {0, 0.12, 0}) annotation(Placement(visible = true, transformation(origin = {-37.829, 27.639}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.FixedTranslation posteriorBase(r = {0, -0.12, 0}) annotation(Placement(visible = true, transformation(origin = {-36.131, -20}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    PowerGrab.Tests.TestDoubleJointComponent boneCDistal(phi_0_doubleJoint = 0, closedLoop = false, phi_0_restrained = 0.5) annotation(Placement(visible = true, transformation(origin = {3.447, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    inner Modelica.Mechanics.MultiBody.World world(g = 0) annotation(Placement(visible = true, transformation(origin = {-132.171, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.FixedRotation fixedRotation(n = {0, 0, 1}, angle = 90) annotation(Placement(visible = true, transformation(origin = {-103.949, -0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Blocks.Sources.Trapezoid loadControl(offset = 0, amplitude = 0, period = 10) annotation(Placement(visible = true, transformation(origin = {-16.581, 76.90600000000001}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Blocks.Sources.Trapezoid anteriorPercent(amplitude = 0, period = 10, offset = 1) annotation(Placement(visible = true, transformation(origin = {32.333, 76.553}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
    Modelica.Blocks.Sources.Trapezoid posteriorPercent(amplitude = 0, period = 10, offset = 0) annotation(Placement(visible = true, transformation(origin = {43.392, -14.111}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
    Components.MagnitudeMuscle magnitudeMuscle(f_max = 200) annotation(Placement(visible = true, transformation(origin = {-105.306, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Components.MagnitudeMuscle magnitudeMuscle1(f_max = 2000) annotation(Placement(visible = true, transformation(origin = {-120, -65.414}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Components.LineMuscle lineMuscle annotation(Placement(visible = true, transformation(origin = {-66.322, 81.84399999999999}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Components.LineMuscle lineMuscle1 annotation(Placement(visible = true, transformation(origin = {70, 81.84399999999999}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Components.LineMuscle lineMuscle2 annotation(Placement(visible = true, transformation(origin = {53.225, -68.43899999999999}, extent = {{10, 10}, {-10, -10}}, rotation = 0)));
    Components.LineMuscle lineMuscle3 annotation(Placement(visible = true, transformation(origin = {118.978, -68.43899999999999}, extent = {{-10, 10}, {10, -10}}, rotation = 0)));
    Modelica.Blocks.Sources.Trapezoid anteriorRegular(amplitude = 0, period = 10, offset = 0) annotation(Placement(visible = true, transformation(origin = {-160, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Blocks.Sources.Trapezoid posteriorRegular(amplitude = 0, period = 10, offset = 0) annotation(Placement(visible = true, transformation(origin = {-158.187, -66.98999999999999}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  equation
    connect(posteriorBase.frame_a, fixedRotation.frame_b) annotation(Line(visible = true, origin = {-78.182, -10}, points = {{32.051, -10}, {-8.141999999999999, -10}, {-8.141999999999999, 10}, {-15.767, 10}}));
    connect(fixedRotation.frame_b, anteriorBase.frame_a) annotation(Line(visible = true, origin = {-60.859, 13.819}, points = {{-33.09, -13.819}, {10.03, -13.819}, {10.03, 13.819}, {13.03, 13.819}}));
    connect(posteriorRegular.y, magnitudeMuscle1.forcePValue) annotation(Line(visible = true, origin = {-135.579, -66.486}, points = {{-11.608, -0.504}, {2.354, -0.504}, {2.354, 0.504}, {6.899, 0.504}}, color = {0, 0, 127}));
    connect(anteriorRegular.y, magnitudeMuscle.forcePValue) annotation(Line(visible = true, origin = {-125.012, 79.71599999999999}, points = {{-23.988, 0.284}, {6.481, 0.284}, {6.481, -0.284}, {11.025, -0.284}}, color = {0, 0, 127}));
    connect(lineMuscle2.frame_b, posteriorBase.frame_b) annotation(Line(visible = true, origin = {-7.236, -44.019}, points = {{50.461, -24.019}, {-15.783, -24.019}, {-15.783, 24.019}, {-18.895, 24.019}}));
    connect(magnitudeMuscle1.fMagnitude, lineMuscle3.muscleMagnitude) annotation(Line(visible = true, origin = {-16.798, -74.58499999999999}, points = {{-92.517, 8.58}, {-89.517, 8.58}, {-89.517, -6.854}, {135.776, -6.854}, {135.776, -3.453}}, color = {0, 0, 127}));
    connect(lineMuscle3.frame_b, boneCDistal.frame_b1) annotation(Line(visible = true, origin = {101.808, -38.519}, points = {{27.17, -29.519}, {30.395, -29.519}, {30.395, 29.519}, {-87.961, 29.519}}));
    connect(lineMuscle3.frame_a, boneCDistal.frame_resolve1) annotation(Line(visible = true, origin = {20.059, -38.519}, points = {{88.919, -29.519}, {-31.153, -29.519}, {-31.153, 29.519}, {-26.612, 29.519}}));
    connect(magnitudeMuscle1.fMagnitude, lineMuscle2.muscleMagnitude) annotation(Line(visible = true, origin = {-43.099, -74.58499999999999}, points = {{-66.21599999999999, 8.58}, {-63.216, 8.58}, {-63.216, -6.854}, {96.324, -6.854}, {96.324, -3.453}}, color = {0, 0, 127}));
    connect(lineMuscle2.frame_a, boneCDistal.frame_resolve1) annotation(Line(visible = true, origin = {27.897, -44.159}, points = {{35.328, -23.88}, {38.553, -23.88}, {38.553, -11.28}, {-38.991, -11.28}, {-38.991, 35.159}, {-34.45, 35.159}}));
    connect(lineMuscle1.frame_b, boneCDistal.frame_b) annotation(Line(visible = true, origin = {65.01900000000001, 45.222}, points = {{14.981, 36.222}, {18.206, 36.222}, {18.206, -36.222}, {-51.392, -36.222}}));
    connect(lineMuscle1.frame_a, boneCDistal.frame_resolve) annotation(Line(visible = true, origin = {7.815, 45.222}, points = {{52.185, 36.222}, {-18.909, 36.222}, {-18.909, -36.222}, {-14.368, -36.222}}));
    connect(lineMuscle.frame_b, boneCDistal.frame_resolve) annotation(Line(visible = true, origin = {-21.266, 45.222}, points = {{-35.056, 36.222}, {10.172, 36.222}, {10.172, -36.222}, {14.713, -36.222}}));
    connect(lineMuscle.frame_a, anteriorBase.frame_b) annotation(Line(visible = true, origin = {-52.113, 59.309}, points = {{-24.209, 22.135}, {-27.434, 22.135}, {-27.434, 9.535}, {27.396, 9.535}, {27.396, -31.67}, {24.284, -31.67}}));
    connect(magnitudeMuscle.fMagnitude, lineMuscle1.muscleMagnitude) annotation(Line(visible = true, origin = {-27.572, 87.98999999999999}, points = {{-67.048, -8.581}, {-64.048, -8.581}, {-64.048, 6.854}, {97.572, 6.854}, {97.572, 3.453}}, color = {0, 0, 127}));
    connect(magnitudeMuscle.fMagnitude, lineMuscle.muscleMagnitude) annotation(Line(visible = true, origin = {-82.101, 87.98999999999999}, points = {{-12.519, -8.581}, {-9.519, -8.581}, {-9.519, 6.854}, {15.779, 6.854}, {15.779, 3.453}}, color = {0, 0, 127}));
    connect(posteriorPercent.y, boneCDistal.posteriorDoubleJointMuscle) annotation(Line(visible = true, origin = {22.286, 2.176}, points = {{10.106, -16.287}, {7.106, -16.287}, {7.106, 11.858}, {-12.159, 11.858}, {-12.159, 8.858000000000001}}, color = {0, 0, 127}));
    connect(anteriorPercent.y, boneCDistal.anteriorDoubleJointMuscle) annotation(Line(visible = true, origin = {11.283, 54.755}, points = {{10.05, 21.798}, {-5.025, 21.798}, {-5.025, -43.595}}, color = {0, 0, 127}));
    connect(loadControl.y, boneCDistal.LoadTorque) annotation(Line(visible = true, origin = {-2.536, 54.931}, points = {{-3.045, 21.975}, {1.522, 21.975}, {1.522, -43.951}}, color = {0, 0, 127}));
    connect(world.frame_b, fixedRotation.frame_a) annotation(Line(visible = true, origin = {-118.06, 0}, points = {{-4.111, 0}, {4.111, -0}}));
    connect(fixedRotation.frame_b, boneCDistal.frame_a) annotation(Line(visible = true, origin = {-50.251, 0}, points = {{-43.698, 0}, {43.698, 0}}));
    annotation(experiment(StopTime = 60.0), Icon(coordinateSystem(extent = {{-120, -120}, {120, 120}}, preserveAspectRatio = true, initialScale = 0.1, grid = {10, 10}), graphics = {Text(visible = true, origin = {28.74, -151.115}, extent = {{-31.26, -11.115}, {31.26, 11.115}}, textString = "loadForce"), Text(visible = true, origin = {-66.892, 151.505}, extent = {{-16.892, -5.355}, {16.892, 5.355}}, textString = "thetaC"), Text(visible = true, origin = {-10, 151.985}, extent = {{-16.892, -5.355}, {16.892, 5.355}}, textString = "thetaM"), Text(visible = true, origin = {50, 151.834}, extent = {{-16.892, -5.355}, {16.892, 5.355}}, textString = "thetaF")}), Diagram(coordinateSystem(extent = {{-148.5, -105}, {148.5, 105}}, preserveAspectRatio = true, initialScale = 0.01, grid = {10, 10})));
  end TestDoubleJointFinger;

  model NewRevoluteTest
    inner Modelica.Mechanics.MultiBody.World world(n = {0, -1, 0}, g = 0, gravityType = Modelica.Mechanics.MultiBody.Types.GravityTypes.UniformGravity) annotation(Placement(visible = true, transformation(origin = {-77.821, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Components.RevoluteRestrained revoluteRestrained(theta_1 = -0.1, theta_2 = 1.47, phi_0_restrained = 0.05, useAxisFlange = true) annotation(Placement(visible = true, transformation(origin = {-23.081, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.BodyCylinder bodyCylinder(density = 800, r = {0.5, 0, 0}, r_0.fixed = false) annotation(Placement(visible = true, transformation(origin = {25, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.MultiBody.Parts.FixedRotation fixedRotation(n = {0, 0, 1}, angle = 90) annotation(Placement(visible = true, transformation(origin = {-50, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Mechanics.Rotational.Sources.Torque torque annotation(Placement(visible = true, transformation(origin = {-70, 45}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Blocks.Sources.Trapezoid trapezoid(amplitude = 0, period = 10, offset = -9.81) annotation(Placement(visible = true, transformation(origin = {-130, 42.784}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  equation
    connect(trapezoid.y, torque.tau) annotation(Line(visible = true, origin = {-92.75, 43.892}, points = {{-26.25, -1.108}, {7.75, -1.108}, {7.75, 1.108}, {10.75, 1.108}}, color = {0, 0, 127}));
    connect(torque.flange, revoluteRestrained.flange_a) annotation(Line(visible = true, origin = {-33.723, 33.333}, points = {{-26.277, 11.667}, {13.139, 11.667}, {13.139, -23.333}}));
    connect(fixedRotation.frame_b, revoluteRestrained.frame_a) annotation(Line(visible = true, origin = {-35.338, 0}, points = {{-4.662, 0}, {4.662, 0}}));
    connect(world.frame_b, fixedRotation.frame_a) annotation(Line(visible = true, origin = {-63.91, 0}, points = {{-3.91, 0}, {3.91, 0}}));
    connect(revoluteRestrained.frame_b, bodyCylinder.frame_a) annotation(Line(visible = true, origin = {-0.266, 0}, points = {{-15.266, 0}, {15.266, -0}}));
    annotation(Diagram(coordinateSystem(extent = {{-148.5, -105}, {148.5, 105}}, preserveAspectRatio = true, initialScale = 0.1, grid = {5, 5})));
  end NewRevoluteTest;
  annotation(Diagram(coordinateSystem(extent = {{-148.5, -105}, {148.5, 105}}, preserveAspectRatio = true, initialScale = 0.1, grid = {5, 5})));
end Tests;