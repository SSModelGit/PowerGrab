(* ::Package:: *)

(* ::Input:: *)
(*Needs["WSMLink`"]*)
(*components={"F_A"\[Element]"Modelica.Blocks.Sources.Ramp", "F_P"\[Element]"Modelica.Blocks.Sources.Constant", "RJT"\[Element]"Modelica.Blocks.Sources.Ramp","LT"\[Element]"Modelica.Blocks.Sources.Constant", "BMJEC"\[Element]"PowerGrab.Components.BoneMuscleJointExperimentalComponent", "world"\[Element]"Modelica.Mechanics.MultiBody.World"};*)
(*connections={"F_A.y"->"BMJEC.F_A","F_P.y"->"BMJEC.F_P","LT.y"->"BMJEC.LoadTorque", "RJT.y"->"BMJEC.RevoluteJointTheta", "world.frame_b"->"BMJEC.frame_a"};*)
(*mmodel=WSMConnectComponents["JTest",components,connections];*)
(*tauComponents={"F_A"\[Element]"Modelica.Blocks.Sources.Ramp", "F_P"\[Element]"Modelica.Blocks.Sources.Constant", "RJT"\[Element]"Modelica.Blocks.Sources.Ramp","LT"\[Element]"Modelica.Blocks.Sources.Constant", "BMJEC"\[Element]"PowerGrab.Components.BoneMuscleJointExperimentalComponent", "world"\[Element]"Modelica.Mechanics.MultiBody.World"};*)
(*tauConnections={"F_A.y"->"BMJEC.F_A","F_P.y"->"BMJEC.F_P","LT.y"->"BMJEC.LoadTorque", "RJT.y"->"BMJEC.RevoluteJointTheta", "world.frame_b"->"BMJEC.frame_a"};*)
(*taumodel=WSMConnectComponents["TauTest",components,connections];*)
(*tauList={};*)
(*tau=-2;*)
(*g=0;*)
(*While[tau<=-1,*)
(*thetaList={};*)
(*theta=0.1;*)
(*While[theta<= 1.5,*)
(*fP=0.01;*)
(*vectorList={};*)
(*phiTrials=1;*)
(*notFPTracker=True;*)
(*desiredLimit=7;*)
(*trialLimit=10000;*)
(*fPList={};*)
(*While[phiTrials<=trialLimit,*)
(*Print["tau = ", tau, ", theta = ", theta, ", Trial number = ", phiTrials, ", fP = ", fP];*)
(*AppendTo[fPList,fP];*)
(*WSMSetValues[mmodel,{"F_A.duration"->10,"F_P.k"->fP,"LT.k"->tau,"RJT.duration"->0,"RJT.height"->0,"RJT.offset"->theta,"world.g"-> g,"BMJEC.phi_0_restrained"->theta}];*)
(*MM=WSMSimulate[mmodel,{0,10}];*)
(*tauFunction=First[MM[{"BMJEC.position2.flange.tau"}]];*)
(*fAValue=(t/.FindRoot[tauFunction[t],{t,0.1}])/10;*)
(*If[0.01<= fAValue<= 1,fAWorks=True,fAWorks=False];*)
(*If[notFPTracker,*)
(*If[fAWorks,*)
(*notFPTracker=False;*)
(*If[phiTrials<= desiredLimit,trialLimit=desiredLimit,trialLimit=desiredLimit],notFPTracker=True],0];*)
(*If[fAWorks,ansList={fP},ansList={}];*)
(*If[fAWorks,*)
(*WSMSetValues[taumodel,{"F_A.duration"->0,"F_A.height"->0,"F_A.offset"->fAValue,"F_P.k"->fP,"LT.k"->tau,"RJT.duration"->10,"RJT.height"->0.1,"RJT.offset"->theta-0.05,"world.g"-> g,"BMJEC.phi_0_restrained"->theta-0.05}];*)
(*tauM=WSMSimulate[taumodel,{0,10}];*)
(*tauStiffnessFunction=First[tauM[{"BMJEC.position2.flange.tau"}]];*)
(*phiStiffnessFunction=First[tauM[{"BMJEC.position2.flange.phi"}]];*)
(*stiffness=tauStiffnessFunction'[t/.FindRoot[tauStiffnessFunction[t],{t,1}]]/phiStiffnessFunction'[t/.FindRoot[tauStiffnessFunction[t],{t,1}]];AppendTo[ansList,stiffness],0];*)
(*If[fAWorks,fP+=0.1,*)
(*If[fAValue>1,fP-=0.1,0];*)
(*If[fAValue<0.01,fP+=0.1,0]];*)
(*If[Position[fPList,fP]!={},fP+=0.05,0];*)
(*phiTrials++;*)
(*If[fAWorks,PrependTo[ansList,fAValue],0];*)
(*If[fAWorks,AppendTo[vectorList,ansList],0]];*)
(*PrependTo[vectorList,theta];*)
(*AppendTo[thetaList,vectorList];*)
(*theta+=0.2];*)
(*PrependTo[thetaList,tau];*)
(*AppendTo[tauList,thetaList];*)
(*tau++]*)
(*tauList*)
(*listPlotSet={};*)
(*AppendTo[{},tauList];*)
(*For[desiredTau=-5,desiredTau<=5,desiredTau++,*)
(*If[desiredTau!=0,dataPoint=Flatten[Position[tauList,desiredTau]];*)
(*tauData=Extract[Extract[tauList,Extract[dataPoint,1]],Extract[dataPoint,2]];*)
(*plotData={};*)
(*For[i=2,i<=Length[tauData],i++,phiData=Extract[tauData,i];extractedPhi=Extract[phiData,1];*)
(*For[j=2,j<=Length[phiData],j++,plotSet={};actuatorData=Extract[phiData,j];If[actuatorData[[3]]<=0,*)
(*AppendTo[plotSet,extractedPhi];*)
(*AppendTo[plotSet,actuatorData[[2]]];*)
(*AppendTo[plotSet,-1*actuatorData[[3]]];*)
(*AppendTo[plotData,plotSet],AppendTo[plotData,{0,0,0}]]]];*)
(*AppendTo[listPlotSet,ListPlot3D[plotData]],0]]*)
(*Show[listPlotSet,PlotRange->All,AxesLabel->{Theta,dTau/dTheta,FP}]*)
(*listPlotSet={};*)
(*For[desiredTau=-5,desiredTau<=5,desiredTau++,*)
(*If[desiredTau!=0,dataPoint=Flatten[Position[tauList,desiredTau]];*)
(*tauData=Extract[Extract[tauList,Extract[dataPoint,1]],Extract[dataPoint,2]];*)
(*plotData={};*)
(*For[i=2,i<=Length[tauData],i++,phiData=Extract[tauData,i];extractedPhi=Extract[phiData,1];*)
(*For[j=2,j<=Length[phiData],j++,plotSet={};actuatorData=Extract[phiData,j];If[actuatorData[[3]]<=0,*)
(*AppendTo[plotSet,extractedPhi];*)
(*AppendTo[plotSet,actuatorData[[1]]];*)
(*AppendTo[plotSet,-1*actuatorData[[3]]];*)
(*AppendTo[plotData,plotSet],AppendTo[plotData,{0,0,0}]]]];*)
(*AppendTo[listPlotSet,ListPlot3D[plotData]],0]]*)
(*Show[listPlotSet,PlotRange->All,AxesLabel->{Theta,dTau/dTheta,FA}]*)
